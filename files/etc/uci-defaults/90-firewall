#!/bin/sh

CONFIG=/etc/firewall.user
FUNCTION=/usr/share/ttl_fix.sh

uci batch << EOF
set firewall.@zone[1].network='wan wwan'
commit firewall
EOF

cat << 'EOF' > $CONFIG
# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

# Internal uci firewall chains are flushed and recreated on reload, so
# put custom rules into the root chains e.g. INPUT or FORWARD or into the
# special user chains, e.g. input_wan_rule or postrouting_lan_rule.

# ANTITTL scanario
# Select physycal  WWAN interface.
# By default wwan is wwan0, wwan1, wwanX
#######################################################
# WWANIF=wwan0
#######################################################
# Choose method for antitethering
# firewall need restart after changes
# Aviable methods: ttl, proxy, ttlproxy, false or blank
#######################################################
# METHOD=ttl
#######################################################
# set and incremenent TTL packets via outgiong interface
# in iptables mangle table
#######################################################
# METHOD=proxy
#######################################################
# redirect all packets to proxy server
# in iptables nat table. NAT disabling.
# Proxy server 3proxy must be running
#######################################################
# METHOD=ttlproxy
#######################################################
# redirect all packets to proxy server with modified TTL packets
# Proxy server 3proxy must be running. NAT disabling.
#######################################################
METHOD=false
#######################################################
# disable antitethering. Default.
# TTL Value ( range 0 - 255 )
# for direct conection value is 64 or 128
# for routed connection value is 65 or 129
# default value 64
#######################################################
# TTL=64
#######################################################
. /usr/share/ttl_fix.sh
EOF

cat << 'EOF' > $FUNCTION
if [ ! $METHOD ]; then
	METHOD=false
fi

if [ ! $WWANIF ]; then
	WWANIF=wwan+
fi

method_ttl(){
        if [ ! $TTL ]; then
                TTL=64
        fi
        case $(($TTL % 2)) in
                0) TTL_INC=4 ;;
                1) TTL_INC=5 ;;
        esac    
        ip6tables -t mangle -A PREROUTING -i $WWANIF -m hl --hl 1 -j HL --hl-inc $TTL_INC
        iptables -t mangle -A PREROUTING -i $WWANIF -m ttl --ttl 1 -j TTL --ttl-inc $TTL_INC
        for ipt in iptables ip6tables; do
                case $ipt in
                        iptables) SUFFIX="TTL --ttl-set" ;;
                        ip6tables) SUFFIX="HL --hl-set" ;;
                esac
                $ipt -t mangle -A OUTPUT -o $WWANIF -j $SUFFIX $TTL
                $ipt -t mangle -A POSTROUTING -o $WWANIF -j $SUFFIX $TTL
        done
        uci set firewall.@zone[1].masq='1'
        uci commit firewall
}

method_proxy(){
        # IPv4 and IPv6 proxy
        for ipt in iptables ip6tables; do
                case $ipt in
                        iptables)
                                IPADDR=$(uci -q get network.lan.ipaddr)
                                END="${IPADDR}:3128"
                        ;;
                        ip6tables)
                                for a in $(ifstatus lan | jsonfilter -e '@["ipv6-prefix-assignment"][*]["local-address"]["address"]'); do
                                        IPADDR="$a"
                                done
                                END="[$IPADDR]:3128"
                        ;;
                esac
                # proxy transparent rules
                $ipt -t nat -N PROXY
                $ipt -t nat -A PREROUTING -i br-lan -j PROXY
                $ipt -t nat -A PROXY ! -d ${IPADDR} \
                        ! -s ${IPADDR} -p tcp \
                -j DNAT --to-destination $END
        done    
        uci set firewall.@zone[1].masq='0'
        uci commit firewall
}

method_ttlproxy(){
        method_ttl
        method_proxy
}

if_masq(){
        uci set firewall.@zone[1].masq='1'
        uci commit firewall
}


case $METHOD in
        ttl) method_ttl ;;
        proxy) method_proxy ;;
        ttlproxy) method_ttlproxy ;;
        *) if_masq ;;
esac

reload_config
EOF
